{"version":3,"sources":["TimerHeader.js","TimerSettings.js","TimerDisplay.js","TimerControls.js","TimerFooter.js","App.js","serviceWorker.js","index.js"],"names":["TimerHeader","react_default","a","createElement","className","id","TimerSettings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSitClick","bind","assertThisInitialized","handleStandClick","e","newSitTime","SitTime","target","add","subtract","get","changeSitTime","newStandTime","StandTime","changeStandTime","onClick","label","Component","formatMMSS","val","TimerDisplay","currentTime","TimerControls","startTimer","stopTimer","resetTimer","TimerFooter","href","src","initSit","initStand","initLabel","App","state","moment","duration","running","timer","switchLabel","switchTimer","countdown","playAudio","makeAlert","setState","clone","setInterval","interval","clearInterval","document","getElementById","play","alert","src_TimerHeader","src_TimerSettings","src_TimerDisplay","src_TimerControls","src_TimerFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRASeA,SAPK,kBAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAA+BC,GAAG,UAAhD,sBC6EOC,cA7EX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,eAAiBP,EAAKO,eAAeC,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKU,iBAAmBV,EAAKU,iBAAiBF,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAJTA,8EAQJW,GACX,IAAMC,EAAaT,KAAKJ,MAAMc,QAE9B,OAAQF,EAAEG,OAAOjB,IACb,IAAK,gBACDe,EAAWG,IAAI,EAAG,WAClB,MACJ,IAAK,gBACDH,EAAWI,SAAS,EAAG,WAO3Bb,KAAKJ,MAAMc,QAAQI,IAAI,WAAa,GACpCd,KAAKJ,MAAMc,QAAQE,IAAI,EAAG,WAI9BZ,KAAKJ,MAAMmB,cAAcN,4CAGZD,GACb,IAAMQ,EAAehB,KAAKJ,MAAMqB,UAEhC,OAAQT,EAAEG,OAAOjB,IACb,IAAK,kBACDsB,EAAaJ,IAAI,EAAG,WACpB,MACJ,IAAK,kBACDI,EAAaH,SAAS,EAAG,WAM7Bb,KAAKJ,MAAMqB,UAAUH,IAAI,WAAa,GACtCd,KAAKJ,MAAMqB,UAAUL,IAAI,EAAG,WAGhCZ,KAAKJ,MAAMsB,gBAAgBF,oCAM3B,OACI1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCC,GAAG,gBAAgByB,QAASnB,KAAKI,gBAAnF,KACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,WAAoDO,KAAKJ,MAAMc,QAAQI,IAAI,WAA3E,WACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCC,GAAG,gBAAgByB,QAASnB,KAAKI,gBAAnF,MAEJd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCC,GAAG,kBAAkByB,QAASnB,KAAKO,kBAArF,KACAjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,aAAsDO,KAAKJ,MAAMqB,UAAUH,IAAI,WAA/E,WACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCC,GAAG,kBAAkByB,QAASnB,KAAKO,kBAArF,MAEJjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BC,GAAG,eAAeM,KAAKJ,MAAMwB,gBArEjEC,aCCtBC,EAAa,SAACC,GAClB,OAAOA,EAAM,GAAK,IAAMA,EAAMA,GAcjBC,EAXM,SAAC5B,GAEpB,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAmCC,GAAG,aAAa4B,EAAW1B,EAAM6B,YAAYX,IAAI,YAAnG,IAAiHQ,EAAW1B,EAAM6B,YAAYX,IAAI,gBCG3IY,EAdO,SAAC9B,GAAD,OAClBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,GAAG,cACzBJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,QAAQD,UAAU,kBAAkB0B,QAASvB,EAAM+B,YAA3D,SACArC,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OAAOD,UAAU,iBAAiB0B,QAASvB,EAAMgC,WAAzD,UAGNtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAkCC,GAAG,QAAQyB,QAASvB,EAAMiC,YAA3E,YCAOC,EATK,kBAChBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,UAASJ,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,KAAGuC,KAAK,iCAAR,iBAExDzC,EAAAC,EAAAC,cAAA,SAAOE,GAAG,OAAOsC,IAAI,yGCEvBC,EAAU,GACVC,EAAY,GACZC,EAAY,MAoJHC,cAjJb,SAAAA,EAAYxC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACjBvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KAEDyC,MAAQ,CACXZ,YAAaa,IAAOC,SAASN,EAAS,WACtCvB,QAAS4B,IAAOC,SAASN,EAAS,WAClChB,UAAWqB,IAAOC,SAASL,EAAW,WACtCd,MAAOe,EACPK,SAAS,EACTC,MAAO,MAGT5C,EAAKkB,cAAgBlB,EAAKkB,cAAcV,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKqB,gBAAkBrB,EAAKqB,gBAAgBb,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACvBA,EAAK6C,YAAc7C,EAAK6C,YAAYrC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAK8C,YAAc9C,EAAK8C,YAAYtC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAK8B,WAAa9B,EAAK8B,WAAWtB,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAK+B,UAAY/B,EAAK+B,UAAUvB,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKgC,WAAahC,EAAKgC,WAAWxB,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAK+C,UAAY/C,EAAK+C,UAAUvC,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKgD,UAAYhD,EAAKgD,UAAUxC,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKiD,UAAYjD,EAAKiD,UAAUzC,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KArBAA,mFA0BjBG,KAAK+C,SAAS,CACZtB,YAAkC,QAArBzB,KAAKqC,MAAMjB,MAAkBpB,KAAKqC,MAAM3B,QAAQsC,QAAUhD,KAAKqC,MAAMpB,UAAU+B,gDAKlFvC,GACVT,KAAK+C,SAAS,CACZtB,YAAczB,KAAKqC,MAAMG,SAAgC,QAArBxC,KAAKqC,MAAMjB,MAAuCpB,KAAKqC,MAAMZ,YAAhChB,EAAWuC,QAC5EtC,QAASD,4CAKCO,GACZhB,KAAK+C,SAAS,CACZtB,YAAczB,KAAKqC,MAAMG,SAAgC,UAArBxC,KAAKqC,MAAMjB,MAA2CpB,KAAKqC,MAAMZ,YAAlCT,EAAagC,QAChF/B,UAAWD,0CAMfhB,KAAK+C,SAAS,CACZ3B,MAA4B,QAArBpB,KAAKqC,MAAMjB,MAAkB,QAAU,8CAMhDpB,KAAK+C,SAAS,CACZtB,YAAkC,QAArBzB,KAAKqC,MAAMjB,MAAkBpB,KAAKqC,MAAM3B,QAAQsC,QAAUhD,KAAKqC,MAAMpB,UAAU+B,+CAO1FhD,KAAKqC,MAAMG,SAGbxC,KAAK+C,SAAS,CACZP,SAAS,EACTC,MAAOQ,YAAYjD,KAAK4C,UAAW,2CAOvC,GAAK5C,KAAKqC,MAAMG,QAAhB,CAGE,IAAIU,EAAWlD,KAAKqC,MAAMI,MAE1BzC,KAAK+C,SAAS,CACZP,SAAS,EACTC,MAAOU,cAAcD,2CAOzB,IAAIA,EAAWlD,KAAKqC,MAAMI,MAE1BzC,KAAK+C,SAAS,CACZtB,YAAaa,IAAOC,SAASN,EAAS,WACtCvB,QAAS4B,IAAOC,SAASN,EAAS,WAClChB,UAAWqB,IAAOC,SAASL,EAAW,WACtCd,MAAOe,EACPK,SAAS,EACTC,MAAOU,cAAcD,yCAMnBlD,KAAKqC,MAAMG,SACbxC,KAAK+C,SAAS,CACZtB,YAAazB,KAAKqC,MAAMZ,YAAYZ,SAAS,EAAG,aAIhDb,KAAKqC,MAAMG,SAAWxC,KAAKqC,MAAMZ,YAAYX,IAAI,YAAc,GAAKd,KAAKqC,MAAMZ,YAAYX,IAAI,YAAc,IAC/Gd,KAAK6C,YACL7C,KAAK8C,YACL9C,KAAK0C,cACL1C,KAAK2C,mDAMKS,SAASC,eAAe,QAChCC,2CAML,MAA6B,QAArBtD,KAAKqC,MAAMjB,MAAkBmC,MADrB,aACsCA,MAFtC,8CAOf,OACEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAD,CAAe/C,QAASV,KAAKqC,MAAM3B,QAASO,UAAWjB,KAAKqC,MAAMpB,UAAWG,MAAOpB,KAAKqC,MAAMjB,MAAOoB,QAASxC,KAAKJ,MAAM4C,QAASzB,cAAef,KAAKe,cAAeG,gBAAiBlB,KAAKkB,kBAC5L5B,EAAAC,EAAAC,cAACkE,EAAD,CAAcjC,YAAazB,KAAKqC,MAAMZ,cACtCnC,EAAAC,EAAAC,cAACmE,EAAD,CAAehC,WAAY3B,KAAK2B,WAAYC,UAAW5B,KAAK4B,UAAWC,WAAY7B,KAAK6B,aACxFvC,EAAAC,EAAAC,cAACoE,EAAD,cA3IUvC,aCDEwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAAShB,SAASC,eAAe,SDuH3C,kBAAmBgB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b1a836fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TimerHeader = () => (\r\n    <div className=\"row header-row\">\r\n        <h2 className=\"col text-center text-primary\" id=\"header\">Sit/Stand Timer</h2>\r\n    </div>\r\n)\r\n\r\n\r\nexport default TimerHeader;","import React, { Component } from 'react';\r\n\r\n\r\nclass TimerSettings extends Component { \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleSitClick = this.handleSitClick.bind(this);\r\n        this.handleStandClick = this.handleStandClick.bind(this);\r\n    }\r\n\r\n    //increment/decrement Sit and Stand times when user clicks + and - buttons\r\n    handleSitClick(e) {\r\n        const newSitTime = this.props.SitTime;\r\n\r\n        switch (e.target.id) {\r\n            case \"Sit-increment\":\r\n                newSitTime.add(1, 'minutes');\r\n                break;\r\n            case \"Sit-decrement\":\r\n                newSitTime.subtract(1, 'minutes');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        if (this.props.SitTime.get('minutes') < 0) {\r\n            this.props.SitTime.add(1, 'minutes')\r\n        }\r\n\r\n\r\n        this.props.changeSitTime(newSitTime);       \r\n    }\r\n\r\n    handleStandClick(e) {\r\n        const newStandTime = this.props.StandTime;\r\n\r\n        switch (e.target.id) {\r\n            case \"Stand-increment\":\r\n                newStandTime.add(1, 'minutes');\r\n                break;\r\n            case \"Stand-decrement\":\r\n                newStandTime.subtract(1, 'minutes');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (this.props.StandTime.get('minutes') < 0) {\r\n            this.props.StandTime.add(1, 'minutes')\r\n        }\r\n\r\n        this.props.changeStandTime(newStandTime);\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"text-center timer-settings\">\r\n                <div className=\"row settings-row\">\r\n                    <div className=\"col-xs-1 btn btn-primary inc-dec\" id=\"Sit-increment\" onClick={this.handleSitClick}>+</div> \r\n                    <div className=\"col-xs-1 settings-label\">Sit:&nbsp;{this.props.SitTime.get('minutes')}:00&nbsp;</div>\r\n                    <div className=\"col-xs-1 btn btn-primary inc-dec\" id=\"Sit-decrement\" onClick={this.handleSitClick}>-</div> \r\n                </div>\r\n                <div className=\"row settings-row\">\r\n                    <div className=\"col-xs-1 btn btn-primary inc-dec\" id=\"Stand-increment\" onClick={this.handleStandClick}>+</div>\r\n                    <div className=\"col-xs-1 settings-label\">Stand:&nbsp;{this.props.StandTime.get('minutes')}:00&nbsp;</div>\r\n                    <div className=\"col-xs-1 btn btn-primary inc-dec\" id=\"Stand-decrement\" onClick={this.handleStandClick}>-</div> \r\n                </div>\r\n                <div className=\"row settings-row\">\r\n                    <div className=\"col-xl-12 font-weight-bold\" id=\"timer-label\">{this.props.label}</div>\r\n                </div>\r\n            </div>\r\n        )   \r\n\r\n    }\r\n}\r\n\r\n\r\nexport default TimerSettings;","import React from 'react';\r\n\r\n\r\n//format time values into MM:SS\r\nconst formatMMSS = (val) => {\r\n  return val < 10 ? '0' + val : val\r\n}\r\n\r\nconst TimerDisplay = (props) => {\r\n\r\n  return (\r\n    <div className=\"text-center timer-display\">\r\n      <div className=\"row display-row\">\r\n        <div className=\"col text-center font-weight-bold\" id=\"time-left\">{formatMMSS(props.currentTime.get('minutes'))}:{formatMMSS(props.currentTime.get('seconds'))}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimerDisplay; ","import React from 'react';\r\n\r\nconst TimerControls = (props) => (\r\n    <div className=\"text-center timer-controls\">\r\n    <div className=\"row controls-row\">\r\n        <div className=\"col-xs-4\" id=\"start_stop\">\r\n            <div id=\"start\" className=\"btn btn-success\" onClick={props.startTimer}>START</div>\r\n            <div id=\"stop\" className=\"btn btn-danger\" onClick={props.stopTimer}>STOP</div>\r\n        </div> \r\n      </div>\r\n      <div className=\"row settings-row\">\r\n        <div className=\"col text-center btn btn-warning\" id=\"reset\" onClick={props.resetTimer}>RESET</div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default TimerControls;","import React from 'react';\r\n\r\nconst TimerFooter = () => (\r\n    <div className=\"text-center timer-footer\">\r\n        <div className=\"row\">\r\n            <div className=\"col text-center\" id=\"footer\"><em>by <a href=\"https://github.com/stefanhk31\">stefanhk31</a></em></div>\r\n        </div>\r\n        <audio id=\"beep\" src=\"https://raw.githubusercontent.com/stefanhk31/audio-files/master/246332__kwahmah-02__five-beeps.wav\" />\r\n    </div>\r\n)\r\n\r\nexport default TimerFooter;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport './App.scss';\r\nimport TimerHeader from './TimerHeader';\r\nimport TimerSettings from './TimerSettings';\r\nimport TimerDisplay from './TimerDisplay';\r\nimport TimerControls from './TimerControls';\r\nimport TimerFooter from './TimerFooter';\r\n\r\nconst initSit = 20;\r\nconst initStand = 20;\r\nconst initLabel = 'SIT';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    //set parent state w/default durations, clock set to 'Sit', and not running\r\n    this.state = {\r\n      currentTime: moment.duration(initSit, 'minutes'),\r\n      SitTime: moment.duration(initSit, 'minutes'),\r\n      StandTime: moment.duration(initStand, 'minutes'),\r\n      label: initLabel,\r\n      running: false,\r\n      timer: null\r\n    };\r\n    \r\n    this.changeSitTime = this.changeSitTime.bind(this);\r\n    this.changeStandTime = this.changeStandTime.bind(this);\r\n    this.switchLabel = this.switchLabel.bind(this);\r\n    this.switchTimer = this.switchTimer.bind(this);\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n    this.countdown = this.countdown.bind(this);\r\n    this.playAudio = this.playAudio.bind(this);\r\n    this.makeAlert = this.makeAlert.bind(this);\r\n  }\r\n\r\n  //set currentTime to either SitTime or StandTime on load\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentTime: this.state.label === 'SIT' ? this.state.SitTime.clone() : this.state.StandTime.clone()\r\n    })\r\n  }\r\n\r\n  //change the Sit and/or Stand times that are displayed\r\n  changeSitTime(newSitTime) {\r\n      this.setState({\r\n        currentTime: !this.state.running && this.state.label === 'SIT' ? newSitTime.clone() : this.state.currentTime,\r\n        SitTime: newSitTime\r\n      })\r\n   \r\n  }\r\n\r\n  changeStandTime(newStandTime) {\r\n      this.setState({\r\n        currentTime: !this.state.running && this.state.label === 'STAND' ? newStandTime.clone() : this.state.currentTime,\r\n        StandTime: newStandTime\r\n      })\r\n  }\r\n\r\n  //change the clock setting when an active timer hits 0\r\n  switchLabel() {\r\n    this.setState({\r\n      label: this.state.label === 'SIT' ? 'STAND' : 'SIT'\r\n    })\r\n  }\r\n\r\n  //change the timer from Sit to Stand when an active timer hits 0\r\n  switchTimer() {\r\n    this.setState({\r\n      currentTime: this.state.label === 'SIT' ? this.state.SitTime.clone() : this.state.StandTime.clone()\r\n    })\r\n  }  \r\n\r\n\r\n  //start the timer when start button is clicked\r\n  startTimer() {\r\n    if (this.state.running) {\r\n      return\r\n    } else { \r\n      this.setState({\r\n        running: true,\r\n        timer: setInterval(this.countdown, 1000)\r\n      })\r\n    }\r\n  }\r\n\r\n  //stop the timer when stop (i.e., pause) button is clicked\r\n  stopTimer() {\r\n    if (!this.state.running) {\r\n      return\r\n    } else {\r\n      let interval = this.state.timer\r\n      \r\n      this.setState({\r\n        running: false,\r\n        timer: clearInterval(interval)\r\n      })\r\n    }\r\n  }\r\n\r\n  //reset the timer when reset button is clicked\r\n  resetTimer() {\r\n    let interval = this.state.timer\r\n\r\n    this.setState({\r\n      currentTime: moment.duration(initSit, 'minutes'),\r\n      SitTime: moment.duration(initSit, 'minutes'),\r\n      StandTime: moment.duration(initStand, 'minutes'),\r\n      label: initLabel,\r\n      running: false,\r\n      timer: clearInterval(interval)\r\n    })\r\n  }\r\n\r\n  //reduce timer by the second when running === true\r\n  countdown() {\r\n    if (this.state.running) {\r\n      this.setState({\r\n        currentTime: this.state.currentTime.subtract(1, 'seconds')\r\n      })\r\n  }\r\n\r\n    if (this.state.running && this.state.currentTime.get('minutes') <= 0 && this.state.currentTime.get('seconds') <= 0)  {\r\n      this.playAudio();\r\n      this.makeAlert();\r\n      this.switchLabel();\r\n      this.switchTimer();\r\n    }\r\n\r\n  }\r\n\r\n playAudio() {\r\n   const beep = document.getElementById(\"beep\");\r\n   beep.play();\r\n }\r\n\r\n makeAlert() {\r\n   const sitDown = \"Sit Down!\"\r\n   const standUp = \"Stand Up!\"\r\n   return (this.state.label === 'SIT' ? alert(standUp) : alert(sitDown))\r\n }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid container-clock\">\r\n        <TimerHeader />\r\n        <TimerSettings SitTime={this.state.SitTime} StandTime={this.state.StandTime} label={this.state.label} running={this.props.running} changeSitTime={this.changeSitTime} changeStandTime={this.changeStandTime}/>\r\n        <TimerDisplay currentTime={this.state.currentTime} />\r\n        <TimerControls startTimer={this.startTimer} stopTimer={this.stopTimer} resetTimer={this.resetTimer}/>\r\n        <TimerFooter />\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}